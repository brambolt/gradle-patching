/*
 * Copyright 2017-2020 Brambolt ehf.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
  id 'com.brambolt.gradle.build.plugin' apply false
  id 'com.brambolt.gradle.testkit' apply false
}

description = 'A Gradle plugin for creating and applying patch files using the Googles diffutils library.'
group = 'com.brambolt.gradle'

ext {
  artifactId = 'brambolt-gradle-patching'
  developers = [[
    email: 'stefan.sigurdsson@brambolt.com',
    id: 'stefan.sigurdsson@brambolt.com',
    name: 'Stefán Sigurðsson'
  ]]
  inceptionYear = '2017'
  isGitHosted = true
  isOpenSource = true // Enables publishing to plugins.gradle.org and Bintray
  licenses = [[
    id: 'Apache-2.0',
    name: 'The Apache Software License, Version 2.0',
    url: 'http://www.apache.org/licenses/LICENSE-2.0.txt'
  ]]
  pluginClass = 'com.brambolt.gradle.PatchingPlugin'
  pluginDisplayName = 'Brambolt Patching plugin'
  pluginId = 'com.brambolt.gradle.patching'
  pluginTags = ['diffutils', 'unified', 'diff', 'patch']
  pluginWebsite = 'https://github.com/brambolt/gradle-patching'
  release = bramboltRelease
  vcsUrl = 'https://github.com/brambolt/gradle-patching'
}

apply plugin: 'com.brambolt.gradle.build.plugin'
apply plugin: 'com.brambolt.gradle.testkit'

dependencies {
  implementation "com.googlecode.java-diff-utils:diffutils:${googleDiffutilsVersion}"
  implementation "com.brambolt:brambolt-rt:${version}"
  implementation "com.brambolt.gradle:brambolt-gradle-rt:${version}"
  testImplementation "com.brambolt.gradle:brambolt-gradle-testkit:${version}"
}

processTestFixtures {
  fixtures = ['src/test/fixture2']
  destinationDir = "${project.buildDir}/resources/test"
}

import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent

test {
  testLogging {
    events TestLogEvent.FAILED,
      TestLogEvent.PASSED,
      TestLogEvent.SKIPPED,
      TestLogEvent.STANDARD_OUT
    exceptionFormat TestExceptionFormat.FULL
    showExceptions true
    showCauses true
    showStackTraces true
    showStandardStreams true
    debug {
      events TestLogEvent.STARTED,
        TestLogEvent.FAILED,
        TestLogEvent.PASSED,
        TestLogEvent.SKIPPED,
        TestLogEvent.STANDARD_ERROR,
        TestLogEvent.STANDARD_OUT
      exceptionFormat TestExceptionFormat.FULL
    }
    info.events = debug.events
    info.exceptionFormat = debug.exceptionFormat
  }
}

test.finalizedBy(':samples:runAll')